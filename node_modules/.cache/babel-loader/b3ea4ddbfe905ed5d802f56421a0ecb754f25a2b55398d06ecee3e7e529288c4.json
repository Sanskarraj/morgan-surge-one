{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, withCtx as _withCtx } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_single_award = _resolveComponent(\"single-award\");\n  const _component_base_container = _resolveComponent(\"base-container\");\n  return _openBlock(), _createBlock(_component_base_container, {\n    title: \"Awards\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.awards, award => {\n      return _openBlock(), _createBlock(_component_single_award, {\n        key: award.id,\n        award: award\n      }, null, 8 /* PROPS */, [\"award\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_base_container","title","_createElementBlock","_Fragment","_renderList","$props","awards","award","_component_single_award","key","id"],"sources":["S:\\morgan\\245\\xtenzQ.github.io\\src\\components\\awards\\AwardsGrid.vue"],"sourcesContent":["<template>\r\n  <base-container title=\"Awards\">\r\n    <single-award v-for=\"award in awards\" :key=\"award.id\" :award=\"award\" />\r\n  </base-container>\r\n</template>\r\n<script>\r\nimport SingleAward from \"./SingleAward.vue\";\r\nimport BaseContainer from \"../reusable/BaseContainer.vue\";\r\n\r\nexport default {\r\n  name: \"AwardsGrid\",\r\n  props: [\"awards\"],\r\n  components: {\r\n    SingleAward,\r\n    BaseContainer,\r\n  },\r\n};\r\n</script>\r\n<style lang=\"\"></style>\r\n"],"mappings":";;;;uBACEA,YAAA,CAEiBC,yBAAA;IAFDC,KAAK,EAAC;EAAQ;sBACd,MAAuB,E,kBAArCC,mBAAA,CAAuEC,SAAA,QAAAC,WAAA,CAAzCC,MAAA,CAAAC,MAAM,EAAfC,KAAK;2BAA1BR,YAAA,CAAuES,uBAAA;QAAhCC,GAAG,EAAEF,KAAK,CAACG,EAAE;QAAGH,KAAK,EAAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}